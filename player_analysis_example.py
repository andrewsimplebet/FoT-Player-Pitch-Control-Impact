"""
In this file, we provide examples of how to use the tools developed in PlayerPitchControlAnalysis.py

This file looks at event 820 of the Metrica data, and generates the following plots
    1. The space generated by the off ball movement of Away Player 19
    2. The space captured by Away Player 19
    3. The amount of pitch control that would be gained and lost by moving Away Player 19 10 meters
        towards the center of the pitch
    4. The space generated by the off ball movement of Home Player
    5. The space captured by Home Player 4
    6. The amount of pitch control that would be gained and lost by moving Home Player 4 5 meters
        towards the center of the pitch

In addition, we also calculate the amount of space created in each of those 6 scenarios.
"""

import Metrica_IO as mio
import Metrica_Velocities as mvel
import Metrica_PitchControl as mpc
import matplotlib.pyplot as plt
from PlayerPitchControlAnalysis import PlayerPitchControlAnalysisPlayer

DATADIR = "/users/andrewpuopolo/sample-data/data"
# DATADIR = "WHERE/YOU/STORE/FREE/METRICA/DATA"

# region Laurie's code
game_id = 2  # let's look at sample match 2

# read in the event data
events = mio.read_event_data(DATADIR, game_id)

# read in tracking data
tracking_home = mio.tracking_data(DATADIR, game_id, "Home")
tracking_away = mio.tracking_data(DATADIR, game_id, "Away")

# Convert positions from metrica units to meters (note change in Metrica's coordinate system since the last lesson)
tracking_home = mio.to_metric_coordinates(tracking_home)
tracking_away = mio.to_metric_coordinates(tracking_away)
events = mio.to_metric_coordinates(events)

# reverse direction of play in the second half so that home team is always attacking from right->left
tracking_home, tracking_away, events = mio.to_single_playing_direction(
    tracking_home, tracking_away, events
)

# Calculate player velocities
tracking_home = mvel.calc_player_velocities(tracking_home, smoothing=True)
tracking_away = mvel.calc_player_velocities(tracking_away, smoothing=True)
params = mpc.default_model_params(3)
# endregion


# We will generate space creation and plots for one player on both teams

# region Away Player 19 analysis
example_player_analysis_away = PlayerPitchControlAnalysisPlayer(
    tracking_home=tracking_home,
    tracking_away=tracking_away,
    params=params,
    events=events,
    event_id=820,
    team_player_to_analyze="Away",
    player_to_analyze=19,
    field_dimens=(106.0, 68.0),
    n_grid_cells_x=50,
)

# Let's look at some outputs for making the player's movement stationary

# First, let's look at the amount of space the player created with his/her off ball run
print(
    example_player_analysis_away.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_away.player_to_analyze)
    + " created "
    + str(
        int(
            example_player_analysis_away.calculate_space_created(
                replace_function="movement", replace_x_velocity=0, replace_y_velocity=0
            )
        )
    )
    + " m^2 of space with his movement during event "
    + str(example_player_analysis_away.event_id)
)

# Now, let's plot the space created and conceded by his run
example_player_analysis_away.plot_pitch_control_difference(
    replace_function="movement", replace_x_velocity=0, replace_y_velocity=0
)
plt.show()

# Let's look at the space the player is gaining by being on the right wing
print(
    example_player_analysis_away.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_away.player_to_analyze)
    + " occupied "
    + str(
        int(
            example_player_analysis_away.calculate_space_created(
                replace_function="presence"
            )
        )
    )
    + " m^2 of space during event "
    + str(example_player_analysis_away.event_id)
)

# And plot this space on the pitch:

example_player_analysis_away.plot_pitch_control_difference(replace_function="presence")
plt.show()


# Finally, let's examine what would happen if we moved the player 10 meters towards the middle of the pitch
print(
    example_player_analysis_away.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_away.player_to_analyze)
    + " would have occupied a difference of "
    + str(
        int(
            -1
            * example_player_analysis_away.calculate_space_created(
                replace_function="location", relative_x_change=0, relative_y_change=10
            )
        )
    )
    + " m^2 of space during event "
    + str(example_player_analysis_away.event_id)
    + " if they were 10 meters towards the center of the pitch"
)

# And let's plot this difference graphically:
example_player_analysis_away.plot_pitch_control_difference(
    replace_function="location", relative_x_change=0, relative_y_change=10
)
plt.show()

# endregion

# region Home Player 4
# Let's do the same analysis for Home Player 4:
example_player_analysis_home = PlayerPitchControlAnalysisPlayer(
    tracking_home=tracking_home,
    tracking_away=tracking_away,
    params=params,
    events=events,
    event_id=820,
    team_player_to_analyze="Home",
    player_to_analyze=4,
    field_dimens=(106.0, 68.0),
    n_grid_cells_x=50,
)

# Let's calculate the amount of space the player is gaining by running towards his own goal

print(
    example_player_analysis_home.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_away.player_to_analyze)
    + " created "
    + str(
        int(
            example_player_analysis_home.calculate_space_created(
                replace_function="movement", replace_x_velocity=0, replace_y_velocity=0
            )
        )
    )
    + " m^2 of space with his movement during event "
    + str(example_player_analysis_home.event_id)
)

# And plot the space gained and conceded:

example_player_analysis_home.plot_pitch_control_difference(
    replace_function="movement", replace_x_velocity=0, replace_y_velocity=0
)
plt.show()

# Overall space creation analysis:

print(
    example_player_analysis_home.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_home.player_to_analyze)
    + " occupied "
    + str(
        int(
            example_player_analysis_home.calculate_space_created(
                replace_function="presence"
            )
        )
    )
    + " m^2 of space during event "
    + str(example_player_analysis_home.event_id)
)

# And plot this space on the pitch:

example_player_analysis_home.plot_pitch_control_difference(replace_function="presence")
plt.show()

# Let's see what happens if we move this defender 5 meters closer to Forward 23:

print(
    example_player_analysis_home.team_player_to_analyze
    + " Player "
    + str(example_player_analysis_home.player_to_analyze)
    + " would have occupied a difference of "
    + str(
        int(
            -1
            * example_player_analysis_home.calculate_space_created(
                replace_function="location", relative_x_change=0, relative_y_change=5
            )
        )
    )
    + " m^2 of space during event "
    + str(example_player_analysis_home.event_id)
    + " if they were 5 meters towards the center of the pitch"
)

example_player_analysis_home.plot_pitch_control_difference(
    replace_function="location", relative_x_change=0, relative_y_change=5
)
plt.show()
# endregion
